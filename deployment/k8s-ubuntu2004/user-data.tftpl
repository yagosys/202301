#!/bin/bash -xe

function aptgetupdate {
    while true; do
         sudo apt-get update -y
    if [ $? -eq 0 ]; then
      break
    fi
    sleep 5
  done
}

export DEBIAN_FRONTEND=noninteractive
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

aptgetupdate

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter


# sysctl params required by setup, params persist across reboots

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

sudo swapoff -a
sudo sed -e '/swap/ s/^#*/#/' -i /etc/fstab

##instal cri-o

OS="xUbuntu_20.04"

VERSION="1.23"

cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /
EOF
cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /
EOF

curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -
curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -

aptgetupdate


sudo apt-get install cri-o cri-o-runc cri-tools -y
sudo systemctl daemon-reload
sudo systemctl enable crio --now

aptgetupdate


sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
aptgetupdate

apt-cache madison kubeadm | tac
sudo apt-get install -y kubelet=1.24.6-00
sleep 10
aptgetupdate
sudo apt-get install -y kubectl=1.24.6-00 
sleep 10
aptgetupdate
sudo apt-get install -y kubeadm=1.24.6-00 
sleep 10
aptgetupdate

sudo apt-mark hold kubelet kubeadm kubectl


local_ip=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
cat <<EOF | sudo tee /etc/default/kubelet
KUBELET_EXTRA_ARGS=--node-ip=$local_ip
EOF


IPADDR=$local_ip
NODENAME=$(hostname -s)
POD_CIDR="10.10.0.0/16"

sudo kubeadm init --apiserver-advertise-address=$IPADDR  --apiserver-cert-extra-sans=$IPADDR  --pod-network-cidr=$POD_CIDR --node-name $NODENAME --ignore-preflight-errors Swap

sleep 10
mkdir -p /home/ubuntu/.kube
sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config
sudo mkdir -p /root/.kube
sudo cp /home/ubuntu/.kube/config /root/.kube/config

kubectl --kubeconfig /home/ubuntu/.kube/config config set-cluster kubernetes --server "https://$local_ip:6443"

kubectl --kubeconfig /home/ubuntu/.kube/config taint nodes --all node-role.kubernetes.io/control-plane-
kubectl --kubeconfig /home/ubuntu/.kube/config taint nodes --all node-role.kubernetes.io/master-


cd /home/ubuntu
git clone https://github.com/intel/multus-cni.git
sudo chown ubuntu:ubuntu /home/ubuntu/multus-cni
cat /home/ubuntu/multus-cni/deployments/multus-daemonset.yml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -

#install whereabout ipam plugin
cd /home/ubuntu
git clone https://github.com/k8snetworkplumbingwg/whereabouts && cd whereabouts
kubectl --kubeconfig /home/ubuntu/.kube/config apply \
    -f doc/crds/daemonset-install.yaml \
    -f doc/crds/whereabouts.cni.cncf.io_ippools.yaml \
    -f doc/crds/whereabouts.cni.cncf.io_overlappingrangeipreservations.yaml



cat /home/ubuntu/.dockerinterbeing.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -

kubectl --kubeconfig /home/ubuntu/.kube/config apply -f  https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-service/main/deploy-nft.yml
git clone https://github.com/redhat-nfvpe/multus-service-demo.git && cd multus-service-demo


kubectl --kubeconfig /home/ubuntu/.kube/config get pod -A 
cd /home/ubuntu
mkdir /home/ubuntu/data -p
git clone https://github.com/yagosys/202301.git 

cat /home/ubuntu/fos_license.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/0_pv_pvc_role.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/1_net_attach_10_1_128.yaml  | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/2_net_attach_10_2_128.yaml  | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f - 
#cat /home/ubuntu/202301/eastwest/br-10-1-128-1-static-for_cfos.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/br-10-2-128-1-static-for-cfos.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/3_cfosdeployment.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f - 
#cat /home/ubuntu/202301/eastwest/4_frontend_pod_br-10-1-128.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
#cat /home/ubuntu/202301/eastwest/5_nginx_pod_br-10-2-128-deployment.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f - 
#cat /home/ubuntu/202301/eastwest/6_nginx-br-10-2-128-deployment-svc-withmultiservce.yaml | kubectl --kubeconfig /home/ubuntu/.kube/config apply -f -
touch /home/ubuntu/deploymentcompleted



